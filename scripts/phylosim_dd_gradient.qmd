---
title: "Phylo Sim exploration of density dependence"
format: html
editor: visual
---

Here, I check the relationship between the *density* param and the species richness.
Also, seed dispersal = (1, global). For this purpose the frequency of the output must not be every 50 generations for 100k generations.

```{r}
#| warning: false
library(PhyloSim)
```

### define params and run model
```{r}
#| eval: true
#| echo: false

# loop creates parameter set

params <- list()
density_va <- seq(0,2,.25)
density_val <- rep(density_va,2)
dispersal_val <- c(as.list(rep(1,length(density_va))),
                   as.list(rep("global",length(density_va))))
scenario_density <- gsub("\\.", "-", as.character(density_val))
scenario_dispersal <- gsub("global", "G", as.character(dispersal_val))

for (i in 1:length(density_val)) {
  params[[i]] <- createCompletePar(x = 256,
                          y = 256,
                          density = density_val[i],
                          dispersal = dispersal_val[[i]],
                          specRate = 2,
                          environment = 0,
                          fitnessBaseMortalityRatio = 1, 
                          densityCut = 1,
                          seed = 20250414,
                          type = "base",
                          protracted = 0,
                          fission = 0,
                          redQueen = 0,
                          redQueenStrength = 0,
                          airmat = NA,
                          fitnessActsOn = "mortality",
                          runs = rep(1:200 * 500),
                          scenario = paste0("dd",
                                            scenario_char[i],
                                            "_disp",
                                            scenario_dispersal[i],
                                            "_sr2_e0_m1_cut1")
  )
  }
```

```{r}
simu <- runSimulationBatch(list(par1,par1), parallel = 4)
tst <- slim(simu, batch = T)

simu <- runSimulationBatch(params, parallel = 45)
saveRDS(tst, "~/Uni/Master/MA/local/runs/tst.RDS")


scenario <- numeric(length(params))
for (i in 1:length(params)) {
  scenario[i] <- params[[i]]$scenario
}

for (i in 1:length(params)) {
  saveRDS(simu[[i]], paste0("/home/andy/cyber_synch/local/runs/20250414_",
                            scenario[i],".rds"))
}

```

### Access results

#### Species richness

```{r}
sr_simu <- sapply(1:4000, function(x) PhyloSim::specRich(simu = simu[[1]], which.result = x))
plot(sr_simu, type = "l")
```

#### Species abundance

```{r}
abundance
PhyloSim::rac(simu, plot = "bar", which.result = 4000)
PhyloSim::rac(simu, plot = "line", which.result = "all")
```

```{r}
#| echo: false

simu <- readRDS("/home/andy/cyber_synch/local/runs/20250414_dd_1")
```

### visualize results

```{r}
#| label: fig-spatial_distirbution
#| fig-width: 5
#| fig-height: 5

plotSpatialPhylo(simu, which.result = 100)
plotSpatialPhylo(simu, which.result = 200)
plotSpatialPhylo(simu, which.result = 300)
plotSpatialPhylo(simu, which.result = 400)
plotSpatialPhylo(simu, which.result = 500)
plotSpatialPhylo(simu, which.result = 600)
plotSpatialPhylo(simu, which.result = 700)
plotSpatialPhylo(simu, which.result = 800)
plotSpatialPhylo(simu, which.result = 900)
plotSpatialPhylo(simu, which.result = 1000)
plotSpatialPhylo(simu, which.result = 1100)
plotSpatialPhylo(simu, which.result = 1200)
plotSpatialPhylo(simu, which.result = 1300)
plotSpatialPhylo(simu, which.result = 1400)
plotSpatialPhylo(simu, which.result = 1500)
plotSpatialPhylo(simu, which.result = 1600)
plotSpatialPhylo(simu, which.result = 1700)
plotSpatialPhylo(simu, which.result = 1800)
plotSpatialPhylo(simu, which.result = 1900)
plotSpatialPhylo(simu, which.result = 2000)
plotSpatialPhylo(simu, which.result = 4000)

```

```{r}
#| label: fig-spatial_distirbution
#| fig-width: 5
#| fig-height: 5
#| fig-cap:
#|   - Spatial distribution at step 1
#|   - Spatial distribution at step 2
#|   - Spatial distribution at step 10
#|   - Spatial distribution at step 11
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx
#|   - Spatial distribution at step xx


# plotSpatialPhylo(simu, which.result = 1)
# plotSpatialPhylo(simu, which.result = 2)
# plotSpatialPhylo(simu, which.result = 3)
# plotSpatialPhylo(simu, which.result = 4)
# plotSpatialPhylo(simu, which.result = 5)
# plotSpatialPhylo(simu, which.result = 6)
# plotSpatialPhylo(simu, which.result = 7)
# plotSpatialPhylo(simu, which.result = 8)
# plotSpatialPhylo(simu, which.result = 9)
# plotSpatialPhylo(simu, which.result = 10)
# plotSpatialPhylo(simu, which.result = 10)
# plotSpatialPhylo(simu, which.result = 11)
# plotSpatialPhylo(simu, which.result = 12)
# plotSpatialPhylo(simu, which.result = 13)
# plotSpatialPhylo(simu, which.result = 14)
# plotSpatialPhylo(simu, which.result = 15)
# plotSpatialPhylo(simu, which.result = 16)
# plotSpatialPhylo(simu, which.result = 17)
# plotSpatialPhylo(simu, which.result = 18)
# plotSpatialPhylo(simu, which.result = 19)
# plotSpatialPhylo(simu, which.result = 20)
# plotSpatialPhylo(simu, which.result = 21)
# plotSpatialPhylo(simu, which.result = 22)
```
