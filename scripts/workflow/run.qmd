---
title: "Phylo Sim exploration of density dependence"
format: html
editor: visual
---

Here, I check the relationship between the *density* param and the species richness. Also, seed dispersal = (1, global). For this purpose the frequency of the output must not be every 50 generations for 100k generations.

```{r}
#| warning: false
source("~/cyber_synch/git_synch/scripts/functions.R")
library(PhyloSim)
library(parallel)
# source("~/Uni/Master/MA/git_synch/scripts/functions.R")
```

### define params and run model

```{r}
#| eval: true
#| echo: false

# Define parameter values
density_options <- c(0, .2, .4, .6, .8, 1)
dispersal_options <- list(1)  # Using a list to preserve types
densityCut_options <- c(1,4)
fitnessBaseMortalityRatio_options <- c(10, 20)

# Initialize empty list for parameters
params5 <- list()
param_index <- 1

# Generate all parameter combinations
for (density in density_options) {
  for (dispersal_type in dispersal_options) {
    for (cut in densityCut_options) {
      for (fbmr in fitnessBaseMortalityRatio_options) {
        # Format scenario components
        scenario_density <- gsub("\\.", "-", as.character(density))
        scenario_dispersal <- ifelse(identical(dispersal_type, "global"), "G", dispersal_type)
        scenario_cut <- gsub("\\.", "-", as.character(cut))
        scenario_fbmr <- gsub("\\.", "-", as.character(fbmr))
        
        # Create parameter set
        params5[[param_index]] <- createCompletePar(
          x = 50,
          y = 50,
          density = density,
          dispersal = dispersal_type,
          specRate = 2,
          environment = 0,
          fitnessBaseMortalityRatio = fbmr,
          densityCut = cut,
          seed = 0520250602, # 20250414, [01:05]20250602
          type = "base",
          protracted = 0,
          fission = 0,
          redQueen = 0,
          redQueenStrength = 0,
          airmat = 0,
          fitnessActsOn = "mortality",
          runs = c(sort( c( ((1:100 * 5)^2), ((1:100 * 5)^2) + 1 ))),
          scenario = paste0("dd", scenario_density,
                          "_disp", scenario_dispersal,
                          "_sr2_e0_m", scenario_fbmr,
                          "_cut", scenario_cut)
        )
        
        # Increment parameter index
        param_index <- param_index + 1
      }
    }
  }
}
```

# run parallel
```{r}
# runs <- runSimulation(params1[[1]])
runs1 <- runSimulationBatch(params1, parallel = 24, backup = TRUE)
saveRDS(runs1, "~/cyber_synch/local/runs/fat/20250602_01")

runs2 <- runSimulationBatch(params2, parallel = 24, backup = TRUE)
saveRDS(runs2, "~/cyber_synch/local/runs/fat/20250602_02")

runs3 <- runSimulationBatch(params3, parallel = 24, backup = TRUE)
saveRDS(runs3, "~/cyber_synch/local/runs/fat/20250602_03")

runs4 <- runSimulationBatch(params4, parallel = 24, backup = TRUE)
saveRDS(runs4, "~/cyber_synch/local/runs/fat/20250602_04")

runs5 <- runSimulationBatch(params5, parallel = 24, backup = TRUE)
saveRDS(runs5, "~/cyber_synch/local/runs/fat/20250602_05")
```





