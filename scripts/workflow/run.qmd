---
title: "Phylo Sim exploration of density dependence"
format: html
editor: visual
---

Here, I check the relationship between the *density* param and the species richness. Also, seed dispersal = (1, global). For this purpose the frequency of the output must not be every 50 generations for 100k generations.

```{r}
#| warning: false
library(PhyloSim)
library(parallel)
# root <- "~/Uni/Master/MA/" # work from local machine
root <- "~/cyber_synch/" # work from uni bayreuth server
source(paste0(root, "/git_synch/scripts/functions.R"))
```

### define params and run model

```{r}
#| eval: true
#| echo: false

# Define parameter values
density_options <- c(0, 1)
dispersal_options <- list(1)
densityCut_options <- c(1)
fitnessBaseMortalityRatio_options <- c(10)
environment_options <- c(0, 1)
seed_options <- c(20250701)

# Initialize empty list for parameters
params <- list()
param_index <- 1

# Generate all parameter combinations
for (density in density_options) {
  for (dispersal_type in dispersal_options) {
    for (cut in densityCut_options) {
      for (fbmr in fitnessBaseMortalityRatio_options) {
        for (env in environment_options) {  # << neue Schleife
          for (current_seed in seed_options) {
            
            scenario_density <- gsub("\\.", "-", as.character(density))
            scenario_dispersal <- ifelse(identical(dispersal_type, "global"), "G", dispersal_type)
            scenario_cut <- gsub("\\.", "-", as.character(cut))
            scenario_fbmr <- gsub("\\.", "-", as.character(fbmr))
            scenario_env <- gsub("\\.", "-", as.character(env))
            scenario_seed_suffix <- substr(as.character(current_seed), nchar(as.character(current_seed)) - 1, nchar(as.character(current_seed)))
            
            params[[param_index]] <- createCompletePar(
              x = 50,
              y = 50,
              density = density,
              dispersal = dispersal_type,
              specRate = 2,
              environment = env,
              fitnessBaseMortalityRatio = fbmr,
              densityCut = cut,
              seed = current_seed,
              type = "base",
              protracted = 0,
              fission = 0,
              redQueen = 0,
              redQueenStrength = 0,
              airmat = 0,
              fitnessActsOn = "mortality",
              runs = c(100, 102, 103),
              scenario = paste0("dd", scenario_density,
                                "_disp", scenario_dispersal,
                                "_sr2_e", scenario_env,
                                "_m", scenario_fbmr,
                                "_cut", scenario_cut,
                                "_seed", scenario_seed_suffix)
            )
            
            param_index <- param_index + 1
          }
        }
      }
    }
  }
}

# run parallel
```

```{r}
runzz <- runSimulationBatch(params, parallel = 2, backup = FALSE)
runz <- runSimulation(params[[1]])
# saveRDS(runs1, "~/cyber_synch/local/runs/fat/20250602_01")
```

```{r}
tryy <- getConNeigh(simu = runzz)
try <- getConNeigh(simu = runz)

tryy <- getMatToTab(simu = tryy)
try <- getMatToTab(simu = try)
```

```{r}
names(runz) <- getNames(runs = runz)
tryy <- getMatToTab(simu = try)
```
