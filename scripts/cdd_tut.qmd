---
title: "cdd_tut"
author: "ai"
format: html
editor: visual
---
```{r}
#| warning: false
library(PhyloSim)
library(tidyverse)
# source("~/cyber_synch/git_synch/scripts/functions.R")
source("~/Uni/Master/MA/git_synch/scripts/functions.R")
```


## 2 Calculating neighborhood densities
weight by distance within a radius (age not possible in phylosim)
caution: *diagonal bias*
option: linear function or exponential function
To assess which shape parameters of the exponential decay function are most appropriate for the data set, we fit models with multiple combinations of decay function values and *compare models using log likelihood*.

### 2.3 Data format explanation
probably I need to give each tree a unique ID and decrease the census interval to be able to compare the same tree at different neighborhoods
Do I need species code, when phylogeny already accounts for similarities?
census number is needed for the statistical model


### 2.4 Define exponential decay function

```{r}
#| fig-width: 5
#| fig-height: 5

exponential_decay <- function(distance, mu){ return(exp(-(1/mu * distance))) }

dist_val <- seq(1,50,1)
mu_val <- seq(1,25,2)
decay_names = paste0("exp ", mu_val)

val_df <- expand.grid(dist_val, mu_val) %>% rename(dist_val = Var1,
                                                   mu_val = Var2)
val_df <- val_df %>% mutate(res = exponential_decay(distance = dist_val, mu = mu_val))

ggplot(data = val_df, mapping = aes(x = dist_val, y = res, colour = mu_val, group = mu_val)) +
  scale_color_continuous(type = "viridis", name = "decay constant") +
  geom_line(linewidth = 2)
```

#### 2.4.1 Determine which trees are at edge of plot

Boundaries form a *torus*. Therefore, effective edges are absent. However, once a theoretical edge is transgressed, a wrap must be defined for the neighbourhood function.

### 2.5 Calculate distances among focal individual and neighbors

Need to define upper threshold limit that includes neighbors. This could be the density cutoff value, as density dependence only applies before the density cutoff.

Here, I apply the exponential functions. As we have multiple census intervals, we need to do multiple calculations.

1) generate a 3 col tiblle with: i = index of focal individual, j = index of neighbor, d = distance i_j
2) add species information: sp_i, sp_j
3) add index of relatedness between i and j (in the tutorial comparison type: het / con)
4) add exponential decay value: loop through all val_mu and create a col for each mu. Calculate the exponential decay with eponential_decay()
```{r}

```



### 2.6 Calculate neighborhood density

For each focal tree the neighborhood densities are calculated for con- and heterospecifics.
(Maybe start with het/con and then inlcude continuous phylogeny)

The idea is to have a tibble at the end with cols:
  - i (focal tree id),
  - comparison_type (con / het OR continuous phylogenic similarity),
  - nodecay_N,
  - exp01_N, exp02_N, ...

Once we have a tibble that segregates between het/con, we can pivot_longer the tibble to unify het/con (p.16)


### 2.7 Model mortality as a function of neighborhood density

For now, let's prepare the tibble. Then we can start the modelling.













